# Your GitLab server
GitLabHostOrigin: https://gitlab.yourdomain.com
# A personal access token with which to perform all source code access.
# Leave blank to use per-user OAuth-style access (a little slower,
# but more secure). Note that using OAuth-style access requires the
# proxy to be running as HTTPS, or behind an HTTPS reverse proxy.
PersonalAccessToken:
# The scope to request during OAuth access token requests.
OAuthTokenRequestScope: api
# How should line endings be modified during post-process?
# Options are: Windows, Unix, None
LineEndingType: None

# Ports n stuff
HttpServer:
  Endpoints:
    Http:
      # Host address.
      # Can be "localhost", or an IP address.
      # Anything else is treated as 0.0.0.0.
      # Default is "0.0.0.0".
      Host: localhost

      # HTTP scheme. Can be "http" or "https".
      # Default is "http".
      # If "https":
      # 1) SSL cert/key stuff needs to be configured.
      # 2) If using a certificate store instead of
      # a certificate file, the certificate will be
      # picked by matching the certificate subject
      # name to the value of "Host".
      Scheme: http

      # Port. Optional.
      # Can be a numeric port number, or the name
      # of an environment variable to read the port number from.
      # If omitted, it will be the default for the scheme (i.e. 80/443)
      Port: 5041

      # A quick way to enable/disable this endpoint
      # Default is true.
      Enabled: true
    Https:
      Host: localhost
      Port: 5042
      Scheme: https

      # Locate the cert: use ONE of the following ...

      # Simple path: where's the cert file?
      # By default this points to a self-signed certificate which WILL NOT WORK FOR HTTPS, but will
      # suffice if you are only using this proxy via HTTP (either using a PersonalAccessToken, or
      # hosting behind a reverse proxy that deals with HTTPS).
      FilePath: ./certs/selfSigned.pfx
      # Password (if you are using PKCS#12 certs)
      Password: yourPasswordHere
      # If you are using a PEM certificate in FilePath, you can specify the private-key PEM file here.
      KeyPath:

      # .NET Core certificate stores: where's the cert stored?
      # For Windows, this is the OS certificates store (available by launching "certlm" from the Start Menu).
      # For Linux, these are inside a special folder created by .NET (~/.dotnet/corefx/cryptography/x509stores/)
      # StoreLocation: LocalMachine
      # StoreName: My

Logging:
  LogLevel:
    Default: Debug
    Microsoft: Warning
    Microsoft.Hosting.Lifetime: Information

NLog:
  throwConfigExceptions: true
  targets:
    async: true
    logfile:
      type: File
      fileName: ./logs/nlog-${shortdate}.log
    logconsole:
      type: Console
      layout: ${level:upperCase=true} ${message} |${exception:format=tostring}"
  rules:
    - logger: "*"
      minLevel: Debug
      writeTo: logconsole
    - logger: "*"
      minLevel: Debug
      writeTo: logfile

AllowedHosts: "*"
